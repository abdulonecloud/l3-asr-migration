---

- hosts: opstk_icehouse
  vars_files:
  - vars.yml

  tasks:
  - name: ping hosts
    ping:

  - name: install_virtualenv
    pip: name=virtualenv

# Create working directories
  - name: create_deployment_dir
    file: path=~/ansible_icehouse state=directory mode=0755

  - name: create_deployment_rollback_etc_neutron
    file: path=~/ansible_icehouse/rollback/etc/neutron state=directory mode=0755

  - name: create_deployment_rollback_usr_lib_systemd_system
    file: path=~/ansible_icehouse/rollback/usr/lib/systemd/system state=directory mode=0755

  - name: create_deployment_rollback_usr_lib_python_sitepackages
    file: path=~/ansible_icehouse/rollback/usr/lib state=directory mode=0755

# snapshot python modules before anything happens
  - name: snapshot_pip_module_versions
    shell: pip freeze > python_modules_step_0 chdir=/root/ansible_icehouse/rollback

# Backup files
  - name: backup_existing_neutron_conf
    shell: cp /etc/neutron/neutron.conf /root/ansible_icehouse/rollback/etc/neutron/neutron.conf.orig

  - name: backup_original_systemctl_neutron_server
    shell: cp /usr/lib/systemd/system/neutron-server.service /root/ansible_icehouse/rollback/usr/lib/systemd/system/neutron-server.service.orig

  - name: backup_usr_lib_python
    shell: cp /usr/lib/python2.7 -R /root/ansible_icehouse/rollback/usr/lib

#  Requires working passwordless ssh working
#  - name: git_clone_l3_asr_migration
#    git: repo={{ migration_project_repo }} dest=/root/ansible_icehouse/migration
  
  - name: git_clone_icehouse
    git: repo={{ project_repo }} dest=/root/ansible_icehouse/neutron version={{ project_branch }}

  - name: install_icehouse_neutron
    shell: python setup.py install
    args:
        chdir: /root/ansible_icehouse/neutron 

  - name: snapshot_pip_module_versions_post_neutron
    shell: pip freeze > python_modules_step_1 chdir=/root/ansible_icehouse/rollback

  - name: git_clone_ncclient
    git: repo={{ ncclient_repo }} dest=/root/ansible_icehouse/ncclient

  - name: install_ncclient
    shell: python setup.py install
    args:
        chdir: /root/ansible_icehouse/ncclient

  - name: snapshot_pip_module_versions_post_neutron_and_ncclient
    shell: pip freeze > python_modules_step_2 chdir=/root/ansible_icehouse/rollback

# configure neutron.conf
  - name: set_service_plugin_as_cisco_router_plugin
    lineinfile:
    args:
        dest: /etc/neutron/neutron.conf 
        regexp: ^service_plugins.*L3RouterPlugin,.*neutron.services.firewall.fwaas_plugin.FirewallPlugin
        line: service_plugins= neutron.plugins.cisco.service_plugins.asr_cisco_router_plugin.PhysicalCiscoRouterPlugin,neutron.services.firewall.fwaas_plugin.FirewallPlugin
        state: present
        backup: yes

  - name: set_identity_uri
    ini_file:
      dest: /etc/neutron/neutron.conf
      section: keystone_authtoken
      option: identity_uri
      value: "http://{{ ansible_eth0.ipv4.address }}:35357/"
      backup: yes

# configure /etc/neutron/plugins/cisco/cisco_router_plugin.ini
  - name: copy_cisco_plugin_conf_files
    shell: cp -R cisco /etc/neutron/plugins
    args:
        chdir: /root/ansible_icehouse/neutron/cfg_examples

  - name: set_asr_router_A
    ini_file: dest=/etc/neutron/plugins/cisco/cisco_router_plugin.ini section=asr:{{ asr1k_a }} option=password value={{ admin_password }} backup=yes

  - name: set_asr_router_B
    ini_file: dest=/etc/neutron/plugins/cisco/cisco_router_plugin.ini section=asr:{{ asr1k_b }} option=password value={{ admin_password }} backup=yes

  - name: set_my_deployment_id
    ini_file: dest=/etc/neutron/plugins/cisco/cisco_router_plugin.ini section=deployment_ids option=mine value={{ my_deployment_id }} backup=yes

  - name: set_other_deployment_ids
    ini_file: dest=/etc/neutron/plugins/cisco/cisco_router_plugin.ini section=deployment_ids option=others value={{ other_deployment_ids }} backup=yes

  - name: copy_l3ha_systemctl_files
    shell: cp neutron-server.service /usr/lib/systemd/system
    args:
        chdir: /root/ansible_icehouse/neutron/cfg_examples/systemctl

  - name: copy_l3ha_systemctl_files
    shell: cp neutron-cisco-cfg-agent.service /usr/lib/systemd/system
    args:
        chdir: /root/ansible_icehouse/neutron/cfg_examples/systemctl

  - name: reload_systemctl
    shell: systemctl daemon-reload

  - name: disable l3-agent
    shell: systemctl disable neutron-l3-agent.service

  - name: enable cisco-cfg-agent
    shell: systemctl enable neutron-cisco-cfg-agent.service



